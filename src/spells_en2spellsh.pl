#!/usr/bin/perl -w

# spells_en2spellsh.pl
# ShowEQ Distributed under GPL
# http://seq.sourceforge.net/
#
# Copyright 2001 Zaphod (dohpaz@users.sourceforge.net)
#
# Contributed to ShowEQ by Zaphod (dophaZ@users.sourceforge.net)
# for use under the terms of the GNU General Public Licence,
# incorporated herein by reference.
#

# This is just a quicky little Perl 5 script to create a spells.h file from
# a spells_en.txt file.

# Notes:
# + This Perl script requires the Unicode::String module that be retrieved off
#   of CPAN from the URL: http://search.cpan.org/search?module=Unicode::String

use Unicode::String qw(latin1 utf16);

$infile = "spells_en.txt";
$outfile = "/tmp/spells.h";
$nameField = 1;
$durationField = 17;
$targetField = 84;
$spellIdField = 0;

unless (open(SPELLSEN, "<$infile")) 
{
    die "Can't open $infile: $!\n";
}
print "Reading: $infile\n";

unless (open(SPELLSH, ">$outfile"))
{
    die "Can't open $outfile: $!\n";
}
print "Writing: $outfile\n";

$maxSpellId = 0;
$header = "/*
 * spells.h
 * 
 * ShowEQ Distributed under GPL
 * http://seq.sourceforge.net/
 */

/* File autogenerated from spells_en.txt */
// Format:
";

print SPELLSH $header;

print SPELLSH "// /* Spell ID */ { Spell Name, Duration, Target},\n";

print SPELLSH "\n";

while($line = <SPELLSEN>)
{
#    print STDERR $count++, "\n";
    $u = utf16($line);
    $latin1line = $u->latin1;
#    print SPELLSH $latin1line;
    @fields = split(/\^/, $latin1line);
#    print STDERR "Fields: ", $#fields, "\n";
    $spellId = $fields[$spellIdField];
    next if (($spellId == 0) || ($fields[$targetField] eq ""));
    $spellName = $fields[$nameField];
    $target = ($fields[$targetField] == 6) ? "false" : "true";
    $duration = ($fields[$durationField] ? $fields[$durationField] : 0) * 6;

    $records[$spellId] = sprintf("/* 0x%04x */ { \"%s\", %d, %s }, ", 
				 $spellId,
				 $spellName,
				 $duration,
				 $target);

    $maxSpellId = $spellId if ($spellId > $maxSpellId);
}

$emptyCount = 0;
for ($spellId = 0; $spellId < $maxSpellId; $spellId++)
{
    if ($records[$spellId]) 
    {
	print SPELLSH $records[$spellId], "\n";
    }
    else
    {
	printf SPELLSH "/* 0x%04x */ { NULL, 0, false },\n", $spellId;
	$emptyCount++;
    }
}

print SPELLSH "// \n";
printf SPELLSH "// Max SpellId: 0x%04x\n", $maxSpellId;
print SPELLSH "// Number of Spells: ", $#records - $emptyCount, "\n";
print SPELLSH "// Empty Entries: ", $emptyCount, "\n";
